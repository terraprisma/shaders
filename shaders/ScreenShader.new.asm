
//listing of all techniques and passes with embedded asm listings 

technique Technique1
{
    pass Default
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   sampler2D uImage0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   uImage0      s0       1
            //
            
                ps_2_0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                mul r0, r0, v0
                mov oC0, r0
            
            // approximately 3 instruction slots used (1 texture, 2 arithmetic)
            };
    }
    pass OverlayGlow
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass FilterColor
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass FilterInvert
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   sampler2D uImage0;
            //   float uOpacity;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   uOpacity     c0       1
            //   uImage0      s0       1
            //
            
                ps_2_0
                def c1, -1, -1, -1, 1
                def c2, 1, 1, 1, 0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                mov r1, c1
                mad r1, r0, r1, c2
                lrp r2, c0.x, r1, r0
                mov oC0, r2
            
            // approximately 5 instruction slots used (1 texture, 4 arithmetic)
            };
    }
    pass FilterMoonLord
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass FilterGraveyard
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   sampler2D uImage0;
            //   float uIntensity;
            //   float uOpacity;
            //   float uProgress;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   uOpacity     c0       1
            //   uIntensity   c1       1
            //   uProgress    c2       1
            //   uImage0      s0       1
            //
            
                ps_2_0
                def c3, 0.333333343, 0, 0, 0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                add r1.w, r0.y, r0.x
                add r1.x, r0.z, r1.w
                mul r1.x, r1.x, c1.x
                mad r1.xyz, r1.x, c3.x, -r0
                mad r1.xyz, c2.x, r1, r0
                mad r1.xyz, r1, r0.w, -r0
                mad r0.xyz, c0.x, r1, r0
                mov oC0, r0
            
            // approximately 9 instruction slots used (1 texture, 8 arithmetic)
            };
    }
    pass FilterSepia
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass FilterTower
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass MonoFix
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass FilterBloodMoon
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass FilterMiniTower
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass FilterMoonLordShake
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass FilterSandstormForeground
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass FilterSandstormBackground
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass FilterBlizzardForeground
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass FilterBlizzardBackground
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass FilterHeatDistortion
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass FilterWaterDistortion
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass WaterDebugDraw
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   sampler2D uImage0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   uImage0      s0       1
            //
            
                ps_2_0
                def c0, -0.5, -0.400000006, 1, 0
                def c1, 2, -2, 0, 0
                dcl v0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                add r0.x, r0.x, c0.x
                mad r0.y, r0.z, c0.y, c0.z
                mul r0.x, r0.x, r0.y
                mul r0.x, r0.x, v0.w
                mul r0.xyz, r0.x, c1
                abs r0.w, r0.x
                mov oC0, r0
            
            // approximately 8 instruction slots used (1 texture, 7 arithmetic)
            };
    }
    pass FilterCrystalDestructionColor
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass FilterCrystalDestructionVortex
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass FilterCrystalWin
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass FilterTest
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   sampler2D uImage0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   uImage0      s0       1
            //
            
                ps_2_0
                def c0, -0.5, 0.200000003, 0.5, 0
                dcl t0.xy
                dcl_2d s0
                add r0.xy, t0, c0.x
                mad r0.xy, r0, c0.y, c0.z
                texld r0, r0, s0
                mov oC0, r0
            
            // approximately 4 instruction slots used (1 texture, 3 arithmetic)
            };
    }
    pass FilterTest2
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
            //
            // Parameters:
            //
            //   sampler2D uImage0;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   uImage0      s0       1
            //
            
                ps_2_0
                def c0, 0.550000012, -0.100000001, 0, -0.75
                def c1, 0.545098066, 0.674509823, 0.0588235296, -0.5
                def c2, 0.607843161, 0.737254918, 0.0588235296, -0.25
                def c3, 0.188235298, 0.384313732, 0.188235298, 1
                def c4, 0.0588235296, 0.219607845, 0.0588235296, 0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                max r1.w, r0.y, r0.z
                max r2.w, r0.x, r1.w
                min r1.x, r0.z, r0.y
                min r2.x, r1.x, r0.x
                add r0.x, r2.w, r2.x
                mad r0.x, r0.x, c0.x, c0.y
                max r1.x, r0.x, c0.z
                add r0.x, r1.x, c0.w
                mov r2.xyz, c1
                cmp r0.xyz, r0.x, r2, c2
                add r0.w, r1.x, c1.w
                add r1.x, r1.x, c2.w
                cmp r0.xyz, r0.w, r0, c3
                cmp r0.xyz, r1.x, r0, c4
                mov r0.w, c3.w
                mov oC0, r0
            
            // approximately 17 instruction slots used (1 texture, 16 arithmetic)
            };
    }
    pass FilterTest3
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
    pass FilterCRT
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                ps_2_0
                def c0, 0, 0, 0, 0
                mov r0, c0.x
                mov oC0, r0
            
            // approximately 2 instruction slots used
            };
    }
}

